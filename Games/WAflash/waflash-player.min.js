// ✅ FIX: use named import instead of default
// ✅ FIXED: use relative path
import { createWaflashModule } from "./waflash.js";

const WAFLASH_BASE_URL = "https://vidkidz.github.io/wasm/";

const createWaflash = (swfUrl) => {
    if (!swfUrl) swfUrl = "";

    let e = {
        arguments: [swfUrl],
        preRun: [],
        postRun: [],
        locateFile: (t, e) => WAFLASH_BASE_URL + t,
        print(t) { console.log(t); },
        printErr(t) { console.error(t); },
        canvas: (function () {
            const t = document.getElementById("canvas");
            t.addEventListener("webglcontextlost", function (ev) {
                alert("WebGL context lost. You will need to reload the page.");
                ev.preventDefault();
            }, false);
            return t;
        })(),
        statusElement: document.getElementById("waflashStatus"),
        setStatus: (t) => {
            if (t) {
                t = t.replace(
                    /Downloading data\.\.\. \((\d+)\/(\d+)\)/,
                    (m, loaded, total) =>
                        "Downloading player... " +
                        Math.floor(parseInt(loaded) / parseInt(total) * 100) + "%"
                );
                console.log("WAFLASH> " + t);

                if (t.indexOf("Loading SWF...") === 0) {
                    t = 'Loading SWF <svg xmlns="http://www.w3.org/2000/svg" version="1.0" width="48px" height="20px" viewBox="0 0 64 16"><path fill="#beb5f9" fill-opacity="0.42" d="M6.4,4.8A3.2,3.2,0,1,1,3.2,8,3.2,3.2,0,0,1,6.4,4.8Zm12.8,0A3.2,3.2,0,1,1,16,8,3.2,3.2,0,0,1,19.2,4.8ZM32,4.8A3.2,3.2,0,1,1,28.8,8,3.2,3.2,0,0,1,32,4.8Zm12.8,0A3.2,3.2,0,1,1,41.6,8,3.2,3.2,0,0,1,44.8,4.8Zm12.8,0A3.2,3.2,0,1,1,54.4,8,3.2,3.2,0,0,1,57.6,4.8Zm12.8,0A3.2,3.2,0,1,1,67.2,8,3.2,3.2,0,0,1,70.4,4.8Zm12.8,0A3.2,3.2,0,1,1,80,8,3.2,3.2,0,0,1,83.2,4.8ZM96,4.8A3.2,3.2,0,1,1,92.8,8,3.2,3.2,0,0,1,96,4.8Zm12.8,0A3.2,3.2,0,1,1,105.6,8,3.2,3.2,0,0,1,108.8,4.8Zm12.8,0A3.2,3.2,0,1,1,118.4,8,3.2,3.2,0,0,1,121.6,4.8Z"/></svg>';
                }

                e.statusElement.innerHTML = t;
                e.showStatus();
            }
        },
        showStatus() { e.statusElement.style.display = "block"; },
        hideStatus() { e.statusElement.style.display = "none"; },
        unload() {}
    };

    window.onerror = () => {
        e.setStatus("Ooops! An error occurred. Reload the page and try again.");
    };

    document.getElementById("canvas").addEventListener("keydown", (ev) => {
        ev.preventDefault();
        ev.stopPropagation();
    });

    document.onmousedown = (function () {
        const t = document.getElementById("canvas");
        let focused = false;
        return function (ev) {
            if (ev.target == t) {
                if (!focused) {
                    t.focus();
                    focused = true;
                }
            } else {
                focused = false;
            }
            return true;
        };
    })();

    e.setStatus("Preparing...");

    createWaflashModule(e).then(() => {
        console.log("WAFLASH> Waflash module created!");
    });
};

export { createWaflash };
